service: api

frameworkVersion: ">=1.69.0 <2.0.0"

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  region: ap-northeast-1
  stage: v1
  # websocketsApiName: serverless-ws
  # websocketsApiRouteSelectionExpression: $request.body.action # custom routes are selected by the value of the action property in the body

  environment:
    CONNECTION_TABLE: ${self:custom.CONNECTION_TABLE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:Query
      Resource:
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.CONNECTION_TABLE}
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.CONNECTION_TABLE}/index/liveId-index

custom:
  CONNECTION_TABLE: campusonair-connection-table

package:
  exclude:
    - .circleci/**
    - .git/**
    - bin/**
    - test/**
    - docs/**
    - .*
    - package-lock.json
    - yarn.lock
    - README.md

functions:
  # connect:
  #   handler: src/websocket/connect.handler
  #   events:
  #     - websocket: $connect

  # disconnect:
  #   handler: src/websocket/disconnect.handler
  #   events:
  #     - websocket: $disconnect

  # default:
  #   handler: src/websocket/default.handler
  #   events:
  #     - websocket: $default

  room:
    handler: src/room/create.handler
    events:
      - http:
          path: room
          method: get
          integration: lambda-proxy
          cors:
            origin: "*"
            maxAge: 86400
          response:
            headers:
              Cache-Control: "no-cache"
