service: api

frameworkVersion: ">=1.69.0 <2.0.0"

plugins:
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  region: ap-northeast-1
  stage: v1
  websocketsApiName: serverless-ws
  websocketsApiRouteSelectionExpression: $request.body.action # custom routes are selected by the value of the action property in the body

  environment:
    CONNECTION_TABLE: ${self:custom.CONNECTION_TABLE}
    CHANNEL_TABLE: ${self:custom.CHANNEL_TABLE}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:DeleteItem
        - dynamodb:Query
      Resource:
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.CONNECTION_TABLE}
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.CONNECTION_TABLE}/index/liveId-index

    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.CHANNEL_TABLE}
        - Fn::Join:
            - ":"
            - - arn:aws:dynamodb
              - ${self:provider.region}
              - Ref: "AWS::AccountId"
              - table/${self:custom.CONNECTION_TABLE}/index/channelName-index
custom:
  CONNECTION_TABLE: campusonair-connection-table
  CHANNEL_TABLE: campusonair-channle-table

package:
  exclude:
    - .circleci/**
    - .git/**
    - bin/**
    - test/**
    - docs/**
    - .*
    - package-lock.json
    - yarn.lock
    - README.md

functions:
  connect:
    handler: src/websocket/connect.handler
    events:
      - websocket: $connect

  disconnect:
    handler: src/websocket/disconnect.handler
    events:
      - websocket: $disconnect

  default:
    handler: src/websocket/default.handler
    events:
      - websocket: $default

  auth:
    handler: src/auth0.handler

  getStudio:
    handler: src/studio/get.handler
    events:
      - http:
          path: studio
          method: get
          authorizer: auth
          integration: lambda-proxy
          cors: true
